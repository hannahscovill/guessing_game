name: Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build release binary
      run: cargo build --release
    
    - name: Create release tag
      id: tag
      run: |
        VERSION=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[0].version')
        TAG="v$VERSION-$(date +%Y%m%d-%H%M%S)"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: Guessing Game ${{ steps.tag.outputs.version }}
        body: |
          Automated release of guessing_game v${{ steps.tag.outputs.version }}
          
          ## Installation
          
          ### macOS (Homebrew)
          ```bash
          # Add tap (replace with your GitHub username)
          brew tap <your-username>/guessing-game
          brew install guessing-game
          ```
          
          ### Manual Installation
          Download the binary and add it to your PATH.
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/guessing_game
        asset_name: guessing_game-macos
        asset_content_type: application/octet-stream